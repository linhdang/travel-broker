package mams;

// each provider will be registered via TravelBroker
agent ProviderAgent extends mams.PassiveMAMSAgent, astra.protocol.FipaRequest, astra.protocol.FipaSubscribe {

    module System system;
    module Console console;

    initial !init();

    rule +!init() {
        // system.trace(true);
        MAMSAgent::!init();
        MAMSAgent::!created("base");
        
        console.println("Setting up available plans under the providers");
          // create endpoint for registering plans http://localhos:9000/travel-broker/plans
        PassiveMAMSAgent::!listResource("plans", "mams.AvailablePlan");

    }

    // add the available service, and trigger negotiation
    rule $cartago.signal(string source_artifact_name, listItemArtifactCreated(string provider_name,  "mams.AvailablePlan")) {
        // handle Provider registration
        string name = source_artifact_name+"-"+provider_name;
        cartago.lookupArtifact(name, cartago.ArtifactId id);
        cartago.focus(id);

        // Record info about the artifact
        +artifact(provider_name, name, id);
       
    }
}