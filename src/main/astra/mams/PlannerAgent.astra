package mams;

// each Planner will be registered via TravelBroker
// Planner presents a Travel Agency registering with the market place
agent PlannerAgent extends mams.ActiveMAMSAgent, astra.protocol.FipaRequest, astra.protocol.FipaSubscribe {
    module System system;
    module Console console;

    initial !init();

    rule +!init() {

        MAMSAgent::!init();
        MAMSAgent::!created("base");
        
        console.println("Setting up plans list resource under each planner");
          // create endpoint for registering plans http://localhos:9000/travel-broker/plans
        PassiveMAMSAgent::!listResource("plans", "mams.Plan");
    }

   // add the request plan, look for provider
    rule $cartago.signal(string source_artifact_name, listItemArtifactCreated(string provider_name, "mams.Plan")) {
        // handle Provider registration
        string name = source_artifact_name+"-"+provider_name;
        cartago.lookupArtifact(name, cartago.ArtifactId id);
        cartago.focus(id);

        // Record info about the artifact
        +artifact(provider_name, name, id);
       
    }
}